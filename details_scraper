from lxml import etree

def get_friends_list(url):
    browser = webdriver.PhantomJS(executable_path='/Users/pranavnagesh/Desktop/PK/Spring 2016/Python/Code work/phantomjs')
    browser.get('https://en.wikipedia.org/wiki/Bill_Gates') 
    soup = BeautifulSoup(browser.page_source,"lxml")
    body_content = soup.findAll('div', attrs={'id' : 'bodyContent'})
    if (body_content):
        body_soup = BeautifulSoup(str(body_content[0]),"lxml")
        all_urls_full = body_soup.findAll("a")

    all_urls=list()
    for element in all_urls_full:
        full_link = 'https://en.wikipedia.org' + element.get('href')
        if full_link not in all_urls:
            all_urls.append(full_link)

    friends_url = list()
    for single_url in all_urls:
        if single_url in master_list_of_people:
            friends_url.append(single_url)

    return friends_url

def get_details_of_single_person(url, master_list_of_people):
    browser = webdriver.PhantomJS(executable_path='/Users/pranavnagesh/Desktop/PK/Spring 2016/Python/Code work/phantomjs')
    browser.get(url) 
    browser.execute_script("window.scrollTo(0,1500)") 
    soup = BeautifulSoup(browser.page_source,"lxml")
    title = soup.findAll(attrs={'class': 'firstHeading'})
    name = title[0].text
    dob = soup.findAll(attrs={'class': 'bday'})
    pos = soup.findAll(attrs={'class': 'role'})
    position = list()
    position.append(pos)
    spouses = list()
    children = list()
    institutions = list()
    table = soup.findAll(attrs={'class' : 'infobox'})[0]
    for row in table.findAll("tr"):
        category =""
        value = ""
        if row.findAll("th") and row.findAll("td"):
            category = str(row.find("th").text)
            value = str(row.find("td").text)
        elif row.findAll('th'): 
            category = 'position'
            value = str(row.find("th").text)
        if category in ['Net Worth','net worth','Net worth']:
            net_worth = value
        if category in ['Spouse','Spouses','Spouse(s)','Partner','Partner(s)','Wife','Husband']:
            spouses.append(value)
        if category in ['Child','Children','child','children']:
            children.append(value)
        if category in ['Institute','Institution','Institution(s)','Institutions','Almamater','Alma mater','University','College', 'Company','Employer','Board Member of','Party','Political Party']:
            institutions.append(value)
        if category in['position','Occupation']:
            position.append(value)
    
    
    friends - list()
    friends = get_friends_list(url)
    new_person = Person(name)
    if dob:
        new_person.add_dob(dob[0].text)
    if position:
        new_person.add_position(position)
    if spouses:
        new_person.add_spouse(spouses)
    if children:
        new_person.add_child(children)
    if institutions:
        new_person.add_institution(institutions)
    if friends:
        new_person.add_connection(friends)

    return new_person



def get_details_of_people(url_list):
    people_details = list()
    browser = webdriver.PhantomJS(executable_path='/Users/pranavnagesh/Desktop/PK/Spring 2016/Python/Code work/phantomjs')
    for url in url_list:
        new_person = get_details_of_single_person(url, url_list)
        people_details.append(new_person)
    
    return people_details



people_details = get_details_of_people(get_list_of_people())

for p in people_details:
        print (str(p.name) + str(p.dob) + str(p.positions) + str(p.net_worth) + str(p.spouse) + str(p.children) + str(p.institutions))
